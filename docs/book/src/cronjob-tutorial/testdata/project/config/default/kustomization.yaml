# 为所有资源添加名字空间
namespace: project-system

# 这个字段的值会加在所有资源名字的前面，比如一个叫做 "wordpress" 的 deployment 会变成 "alices-wordpress"。
# 注意它应该和上面名字空间字段的前缀匹配（'-' 之前的字符串）。
namePrefix: project-

# 要给所有资源和选择器添加的标签。
#commonLabels:
#  someName: someValue

bases:
- ../crd
- ../rbac
- ../manager
# [WEBHOOK] 用于启用 webhook，取消注释所有有 [WEBHOOK] 前缀的字段，包括在 crd/kustomization.yaml 中的。
- ../webhook
# [CERTMANAGER] 用于启用证书管理，需要取消带有 'CERTMANAGER' 的所有字段的注释。'WEBHOOK' 组件是必须的。
- ../certmanager
# [PROMETHEUS] 用于启用 prometheus 监控，取消带有 'PROMETHEUS' 的左右字段的注释。
#- ../prometheus

patchesStrategicMerge:
  # 通过给 /metrics 的 endpoint 加上认证来保护它。
  # 如果你想你的 controller-manager 暴露 /metrics 的 endpoint 并且不需要任何授权，那么注释掉下面这行。
- manager_auth_proxy_patch.yaml

# [WEBHOOK] 用于启用 webhook，取消注释所有有 [WEBHOOK] 前缀的字段，包括在 crd/kustomization.yaml 中的。
- manager_webhook_patch.yaml

# [CERTMANAGER] 用于启用证书管理，需要取消带有 'CERTMANAGER' 的所有字段的注释。
# 取消在 crd/kustomization.yaml 中 'CERTMANAGER' 部分的注释可以在 admission webhook 中启用 CA 注入。
# 需要启用 'CERTMANAGER' 来使用 ca 注入。
- webhookcainjection_patch.yaml

# 下面的配置是为了教授 kustomize 如何进行变量替换。
vars:
# [CERTMANAGER] 用于启用证书管理，取消带有 'CERTMANAGER' 前缀的所有部分注释。
- name: CERTIFICATE_NAMESPACE # CR 证书的命名空间
  objref:
    kind: Certificate
    group: cert-manager.io
    version: v1alpha2
    name: serving-cert # 这个名字应该和 certificate.yaml 文件中的一个名字相匹配
  fieldref:
    fieldpath: metadata.namespace
- name: CERTIFICATE_NAME
  objref:
    kind: Certificate
    group: cert-manager.io
    version: v1alpha2
    name: serving-cert # 这个名字应该和 certificate.yaml 文件中的一个名字相匹配
- name: SERVICE_NAMESPACE # service 的命名空间
  objref:
    kind: Service
    version: v1
    name: webhook-service
  fieldref:
    fieldpath: metadata.namespace
- name: SERVICE_NAME
  objref:
    kind: Service
    version: v1
    name: webhook-service
