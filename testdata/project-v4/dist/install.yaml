apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: project-v4
    control-plane: controller-manager
  name: project-v4-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: admirales.crew.testproject.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: project-v4-webhook-service
          namespace: project-v4-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: crew.testproject.org
  names:
    kind: Admiral
    listKind: AdmiralList
    plural: admirales
    singular: admiral
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Admiral is the Schema for the admirales API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AdmiralSpec defines the desired state of Admiral
            properties:
              foo:
                description: Foo is an example field of Admiral. Edit admiral_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: AdmiralStatus defines the observed state of Admiral
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: captains.crew.testproject.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: project-v4-webhook-service
          namespace: project-v4-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: crew.testproject.org
  names:
    kind: Captain
    listKind: CaptainList
    plural: captains
    singular: captain
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Captain is the Schema for the captains API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CaptainSpec defines the desired state of Captain
            properties:
              foo:
                description: Foo is an example field of Captain. Edit captain_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: CaptainStatus defines the observed state of Captain
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: firstmates.crew.testproject.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: project-v4-webhook-service
          namespace: project-v4-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: crew.testproject.org
  names:
    kind: FirstMate
    listKind: FirstMateList
    plural: firstmates
    singular: firstmate
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: FirstMate is the Schema for the firstmates API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FirstMateSpec defines the desired state of FirstMate
            properties:
              foo:
                description: Foo is an example field of FirstMate. Edit firstmate_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: FirstMateStatus defines the observed state of FirstMate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: project-v4
  name: project-v4-leader-election-role
  namespace: project-v4-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: project-v4-manager-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/finalizers
  verbs:
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - captains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - captains/finalizers
  verbs:
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - captains/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates/finalizers
  verbs:
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - lakers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - lakers/finalizers
  verbs:
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - lakers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: project-v4
  name: project-v4-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: project-v4
  name: project-v4-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: project-v4
  name: project-v4-leader-election-rolebinding
  namespace: project-v4-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: project-v4-leader-election-role
subjects:
- kind: ServiceAccount
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: project-v4
  name: project-v4-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: project-v4-manager-role
subjects:
- kind: ServiceAccount
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: project-v4
  name: project-v4-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: project-v4-proxy-role
subjects:
- kind: ServiceAccount
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: project-v4
    control-plane: controller-manager
  name: project-v4-controller-manager-metrics-service
  namespace: project-v4-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-webhook-service
  namespace: project-v4-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: project-v4
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: project-v4
    control-plane: controller-manager
  name: project-v4-controller-manager
  namespace: project-v4-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: project-v4-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: project-v4-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate-crew-testproject-org-v1-admiral
  failurePolicy: Fail
  name: madmiral.kb.io
  rules:
  - apiGroups:
    - crew.testproject.org
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - admirales
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate-crew-testproject-org-v1-captain
  failurePolicy: Fail
  name: mcaptain.kb.io
  rules:
  - apiGroups:
    - crew.testproject.org
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - captains
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: project-v4-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /validate-crew-testproject-org-v1-captain
  failurePolicy: Fail
  name: vcaptain.kb.io
  rules:
  - apiGroups:
    - crew.testproject.org
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - captains
  sideEffects: None
