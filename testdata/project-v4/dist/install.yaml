apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
    control-plane: controller-manager
  name: project-v4-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: admirales.crew.testproject.org
spec:
  group: crew.testproject.org
  names:
    kind: Admiral
    listKind: AdmiralList
    plural: admirales
    singular: admiral
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Admiral is the Schema for the admirales API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AdmiralSpec defines the desired state of Admiral.
            properties:
              foo:
                description: Foo is an example field of Admiral. Edit admiral_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: AdmiralStatus defines the observed state of Admiral.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: captains.crew.testproject.org
spec:
  group: crew.testproject.org
  names:
    kind: Captain
    listKind: CaptainList
    plural: captains
    singular: captain
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Captain is the Schema for the captains API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CaptainSpec defines the desired state of Captain.
            properties:
              foo:
                description: Foo is an example field of Captain. Edit captain_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: CaptainStatus defines the observed state of Captain.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: firstmates.crew.testproject.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: project-v4-webhook-service
          namespace: project-v4-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: crew.testproject.org
  names:
    kind: FirstMate
    listKind: FirstMateList
    plural: firstmates
    singular: firstmate
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: FirstMate is the Schema for the firstmates API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FirstMateSpec defines the desired state of FirstMate.
            properties:
              foo:
                description: Foo is an example field of FirstMate. Edit firstmate_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: FirstMateStatus defines the observed state of FirstMate.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: FirstMate is the Schema for the firstmates API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FirstMateSpec defines the desired state of FirstMate.
            properties:
              foo:
                description: Foo is an example field of FirstMate. Edit firstmate_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: FirstMateStatus defines the observed state of FirstMate.
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-leader-election-role
  namespace: project-v4-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-admiral-admin-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales
  verbs:
  - '*'
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-admiral-editor-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-admiral-viewer-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-captain-admin-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - captains
  verbs:
  - '*'
- apiGroups:
  - crew.testproject.org
  resources:
  - captains/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-captain-editor-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - captains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - captains/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-captain-viewer-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - captains
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - captains/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-firstmate-admin-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates
  verbs:
  - '*'
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-firstmate-editor-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-firstmate-viewer-role
rules:
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: project-v4-manager-role
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/finalizers
  verbs:
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales
  - captains
  - firstmates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/finalizers
  - captains/finalizers
  - firstmates/finalizers
  verbs:
  - update
- apiGroups:
  - crew.testproject.org
  resources:
  - admirales/status
  - captains/status
  - firstmates/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: project-v4-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: project-v4-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-leader-election-rolebinding
  namespace: project-v4-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: project-v4-leader-election-role
subjects:
- kind: ServiceAccount
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: project-v4-manager-role
subjects:
- kind: ServiceAccount
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: project-v4-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: project-v4-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: project-v4-controller-manager
  namespace: project-v4-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
    control-plane: controller-manager
  name: project-v4-controller-manager-metrics-service
  namespace: project-v4-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: project-v4
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
  name: project-v4-webhook-service
  namespace: project-v4-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: project-v4
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: project-v4
    control-plane: controller-manager
  name: project-v4-controller-manager
  namespace: project-v4-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: project-v4
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: project-v4
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: project-v4-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: project-v4-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate-crew-testproject-org-v1-admiral
  failurePolicy: Fail
  name: madmiral-v1.kb.io
  rules:
  - apiGroups:
    - crew.testproject.org
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - admirales
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate-crew-testproject-org-v1-captain
  failurePolicy: Fail
  name: mcaptain-v1.kb.io
  rules:
  - apiGroups:
    - crew.testproject.org
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - captains
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate-apps-v1-deployment
  failurePolicy: Fail
  name: mdeployment-v1.kb.io
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - deployments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate-cert-manager-io-v1-issuer
  failurePolicy: Fail
  name: missuer-v1.kb.io
  rules:
  - apiGroups:
    - cert-manager.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - issuers
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /mutate--v1-pod
  failurePolicy: Fail
  name: mpod-v1.kb.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: project-v4-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /validate-crew-testproject-org-v1-captain
  failurePolicy: Fail
  name: vcaptain-v1.kb.io
  rules:
  - apiGroups:
    - crew.testproject.org
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - captains
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: project-v4-webhook-service
      namespace: project-v4-system
      path: /validate-apps-v1-deployment
  failurePolicy: Fail
  name: vdeployment-v1.kb.io
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - deployments
  sideEffects: None
