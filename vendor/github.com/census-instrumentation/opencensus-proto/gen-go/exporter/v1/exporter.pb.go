// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opencensus/proto/exporter/v1/exporter.proto

package v1 // import "github.com/census-instrumentation/opencensus-proto/gen-go/exporter/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v11 "github.com/census-instrumentation/opencensus-proto/gen-go/metrics/v1"
import v1 "github.com/census-instrumentation/opencensus-proto/gen-go/trace/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ExportSpanRequest struct {
	Spans                []*v1.Span `protobuf:"bytes,1,rep,name=spans,proto3" json:"spans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExportSpanRequest) Reset()         { *m = ExportSpanRequest{} }
func (m *ExportSpanRequest) String() string { return proto.CompactTextString(m) }
func (*ExportSpanRequest) ProtoMessage()    {}
func (*ExportSpanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_exporter_d7c27a825b537817, []int{0}
}
func (m *ExportSpanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportSpanRequest.Unmarshal(m, b)
}
func (m *ExportSpanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportSpanRequest.Marshal(b, m, deterministic)
}
func (dst *ExportSpanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportSpanRequest.Merge(dst, src)
}
func (m *ExportSpanRequest) XXX_Size() int {
	return xxx_messageInfo_ExportSpanRequest.Size(m)
}
func (m *ExportSpanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportSpanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportSpanRequest proto.InternalMessageInfo

func (m *ExportSpanRequest) GetSpans() []*v1.Span {
	if m != nil {
		return m.Spans
	}
	return nil
}

type ExportSpanResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportSpanResponse) Reset()         { *m = ExportSpanResponse{} }
func (m *ExportSpanResponse) String() string { return proto.CompactTextString(m) }
func (*ExportSpanResponse) ProtoMessage()    {}
func (*ExportSpanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_exporter_d7c27a825b537817, []int{1}
}
func (m *ExportSpanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportSpanResponse.Unmarshal(m, b)
}
func (m *ExportSpanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportSpanResponse.Marshal(b, m, deterministic)
}
func (dst *ExportSpanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportSpanResponse.Merge(dst, src)
}
func (m *ExportSpanResponse) XXX_Size() int {
	return xxx_messageInfo_ExportSpanResponse.Size(m)
}
func (m *ExportSpanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportSpanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExportSpanResponse proto.InternalMessageInfo

type ExportMetricsRequest struct {
	Metrics              []*v11.Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExportMetricsRequest) Reset()         { *m = ExportMetricsRequest{} }
func (m *ExportMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*ExportMetricsRequest) ProtoMessage()    {}
func (*ExportMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_exporter_d7c27a825b537817, []int{2}
}
func (m *ExportMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportMetricsRequest.Unmarshal(m, b)
}
func (m *ExportMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportMetricsRequest.Marshal(b, m, deterministic)
}
func (dst *ExportMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportMetricsRequest.Merge(dst, src)
}
func (m *ExportMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_ExportMetricsRequest.Size(m)
}
func (m *ExportMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportMetricsRequest proto.InternalMessageInfo

func (m *ExportMetricsRequest) GetMetrics() []*v11.Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type ExportMetricsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportMetricsResponse) Reset()         { *m = ExportMetricsResponse{} }
func (m *ExportMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*ExportMetricsResponse) ProtoMessage()    {}
func (*ExportMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_exporter_d7c27a825b537817, []int{3}
}
func (m *ExportMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportMetricsResponse.Unmarshal(m, b)
}
func (m *ExportMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportMetricsResponse.Marshal(b, m, deterministic)
}
func (dst *ExportMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportMetricsResponse.Merge(dst, src)
}
func (m *ExportMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_ExportMetricsResponse.Size(m)
}
func (m *ExportMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExportMetricsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ExportSpanRequest)(nil), "opencensus.proto.exporter.v1.ExportSpanRequest")
	proto.RegisterType((*ExportSpanResponse)(nil), "opencensus.proto.exporter.v1.ExportSpanResponse")
	proto.RegisterType((*ExportMetricsRequest)(nil), "opencensus.proto.exporter.v1.ExportMetricsRequest")
	proto.RegisterType((*ExportMetricsResponse)(nil), "opencensus.proto.exporter.v1.ExportMetricsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExportClient is the client API for Export service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExportClient interface {
	ExportSpan(ctx context.Context, opts ...grpc.CallOption) (Export_ExportSpanClient, error)
	ExportMetrics(ctx context.Context, opts ...grpc.CallOption) (Export_ExportMetricsClient, error)
}

type exportClient struct {
	cc *grpc.ClientConn
}

func NewExportClient(cc *grpc.ClientConn) ExportClient {
	return &exportClient{cc}
}

func (c *exportClient) ExportSpan(ctx context.Context, opts ...grpc.CallOption) (Export_ExportSpanClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Export_serviceDesc.Streams[0], "/opencensus.proto.exporter.v1.Export/ExportSpan", opts...)
	if err != nil {
		return nil, err
	}
	x := &exportExportSpanClient{stream}
	return x, nil
}

type Export_ExportSpanClient interface {
	Send(*ExportSpanRequest) error
	Recv() (*ExportSpanResponse, error)
	grpc.ClientStream
}

type exportExportSpanClient struct {
	grpc.ClientStream
}

func (x *exportExportSpanClient) Send(m *ExportSpanRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *exportExportSpanClient) Recv() (*ExportSpanResponse, error) {
	m := new(ExportSpanResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *exportClient) ExportMetrics(ctx context.Context, opts ...grpc.CallOption) (Export_ExportMetricsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Export_serviceDesc.Streams[1], "/opencensus.proto.exporter.v1.Export/ExportMetrics", opts...)
	if err != nil {
		return nil, err
	}
	x := &exportExportMetricsClient{stream}
	return x, nil
}

type Export_ExportMetricsClient interface {
	Send(*ExportMetricsRequest) error
	Recv() (*ExportMetricsResponse, error)
	grpc.ClientStream
}

type exportExportMetricsClient struct {
	grpc.ClientStream
}

func (x *exportExportMetricsClient) Send(m *ExportMetricsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *exportExportMetricsClient) Recv() (*ExportMetricsResponse, error) {
	m := new(ExportMetricsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExportServer is the server API for Export service.
type ExportServer interface {
	ExportSpan(Export_ExportSpanServer) error
	ExportMetrics(Export_ExportMetricsServer) error
}

func RegisterExportServer(s *grpc.Server, srv ExportServer) {
	s.RegisterService(&_Export_serviceDesc, srv)
}

func _Export_ExportSpan_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExportServer).ExportSpan(&exportExportSpanServer{stream})
}

type Export_ExportSpanServer interface {
	Send(*ExportSpanResponse) error
	Recv() (*ExportSpanRequest, error)
	grpc.ServerStream
}

type exportExportSpanServer struct {
	grpc.ServerStream
}

func (x *exportExportSpanServer) Send(m *ExportSpanResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *exportExportSpanServer) Recv() (*ExportSpanRequest, error) {
	m := new(ExportSpanRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Export_ExportMetrics_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExportServer).ExportMetrics(&exportExportMetricsServer{stream})
}

type Export_ExportMetricsServer interface {
	Send(*ExportMetricsResponse) error
	Recv() (*ExportMetricsRequest, error)
	grpc.ServerStream
}

type exportExportMetricsServer struct {
	grpc.ServerStream
}

func (x *exportExportMetricsServer) Send(m *ExportMetricsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *exportExportMetricsServer) Recv() (*ExportMetricsRequest, error) {
	m := new(ExportMetricsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Export_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opencensus.proto.exporter.v1.Export",
	HandlerType: (*ExportServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExportSpan",
			Handler:       _Export_ExportSpan_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ExportMetrics",
			Handler:       _Export_ExportMetrics_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "opencensus/proto/exporter/v1/exporter.proto",
}

func init() {
	proto.RegisterFile("opencensus/proto/exporter/v1/exporter.proto", fileDescriptor_exporter_d7c27a825b537817)
}

var fileDescriptor_exporter_d7c27a825b537817 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4f, 0x4b, 0xc3, 0x30,
	0x14, 0xb7, 0x88, 0x13, 0x9e, 0x78, 0x30, 0x4c, 0x94, 0x22, 0x4c, 0x2a, 0xc2, 0x44, 0x96, 0xac,
	0x1b, 0x1e, 0xbd, 0x0c, 0x76, 0x11, 0x84, 0x31, 0xf1, 0xe2, 0xad, 0x2b, 0x8f, 0xd9, 0x43, 0x93,
	0x98, 0xa4, 0x45, 0x2f, 0x7e, 0x75, 0xa5, 0x7d, 0xed, 0xba, 0x5a, 0x18, 0xf3, 0xf6, 0xc8, 0xef,
	0x6f, 0x1e, 0x0f, 0xee, 0x95, 0x46, 0x19, 0xa3, 0xb4, 0x99, 0x15, 0xda, 0x28, 0xa7, 0x04, 0x7e,
	0x6a, 0x65, 0x1c, 0x1a, 0x91, 0x87, 0x9b, 0x99, 0x97, 0x10, 0xbb, 0x6a, 0xc8, 0xf4, 0xc2, 0x37,
	0x84, 0x3c, 0xf4, 0x6f, 0x3b, 0x56, 0xce, 0x44, 0x31, 0x16, 0x3e, 0xe5, 0x40, 0x12, 0xff, 0xae,
	0x43, 0x4b, 0xd1, 0x99, 0x24, 0xb6, 0x05, 0xb1, 0x1a, 0x89, 0x1a, 0x3c, 0xc1, 0xd9, 0xbc, 0x0c,
	0x78, 0xd1, 0x91, 0x5c, 0xe2, 0x47, 0x86, 0xd6, 0xb1, 0x07, 0x38, 0xb2, 0x3a, 0x92, 0xf6, 0xd2,
	0xbb, 0x3e, 0x1c, 0x9e, 0x4c, 0x06, 0xbc, 0x53, 0x8a, 0xd2, 0xf2, 0x90, 0x97, 0x32, 0x62, 0x07,
	0x7d, 0x60, 0xdb, 0x5e, 0x56, 0x2b, 0x69, 0x31, 0x78, 0x85, 0x3e, 0xbd, 0x3e, 0x53, 0x70, 0x1d,
	0xf2, 0x08, 0xc7, 0x55, 0x95, 0x2a, 0xe6, 0xa6, 0x1b, 0x53, 0x77, 0xcd, 0x43, 0x4e, 0xea, 0x65,
	0xad, 0x09, 0x2e, 0xe0, 0xfc, 0x8f, 0x2d, 0xe5, 0x4d, 0x7e, 0x3c, 0xe8, 0x11, 0xc2, 0x32, 0x80,
	0xa6, 0x10, 0x13, 0x7c, 0xd7, 0x6e, 0x79, 0x67, 0x0d, 0xfe, 0x78, 0x7f, 0x41, 0xf5, 0xd7, 0x83,
	0xa1, 0x37, 0xf6, 0xd8, 0x37, 0x9c, 0xb6, 0xaa, 0xb1, 0xc9, 0x3e, 0x46, 0xed, 0xf5, 0xf8, 0xd3,
	0x7f, 0x69, 0xb6, 0xf3, 0x67, 0x5f, 0x30, 0x48, 0xd4, 0x4e, 0xf9, 0xac, 0x2a, 0x88, 0x66, 0x51,
	0x40, 0x0b, 0xef, 0x6d, 0xbe, 0x4e, 0xdc, 0x7b, 0xb6, 0xe2, 0xb1, 0x4a, 0x05, 0xa9, 0x46, 0x89,
	0xb4, 0xce, 0x64, 0x29, 0x4a, 0x17, 0xb9, 0x44, 0x49, 0xd1, 0x18, 0x8e, 0xe8, 0xa8, 0xd6, 0x28,
	0x47, 0xeb, 0xd6, 0x35, 0xaf, 0x7a, 0x25, 0x32, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x13, 0x87,
	0x36, 0x02, 0xf4, 0x02, 0x00, 0x00,
}
